name: build-containers
run-name: Building service containers
on:
  push:

env:
  BASE_IMAGE: cccs/assemblyline-v4-service-base:4.5.stable
  REGISTRY: ghcr.io
  PUSH_REGISTRY: ghcr.io
  BASE_TAG: 4.5.0.stable
  MANIFEST_REGISTRY: ghcr.io/

jobs:
  discover-services:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Discover directories with Dockerfiles
        id: services
        run: |
          echo "services=$(find . -type f -name Dockerfile | xargs -n 1 dirname | uniq | cut -d '/' -f 2 | grep -v 'TEMPLATE' | grep -v 'al-service-with-py11' | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
      - name: Print services with Dockerfiles
        run: |
          echo "Services with Dockerfiles: ${{ steps.services.outputs.services }}"
    outputs:
      services: ${{ steps.services.outputs.services }}
  build-containers:
    needs: discover-services
    runs-on: ubuntu-latest
    if: needs.discover-services.outputs.services != '[]'
    strategy:
      matrix:
        service: ${{ fromJson(needs.discover-services.outputs.services) }}
    defaults:
      run:
        working-directory: ${{ matrix.service }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if the current version has already been pushed
        id: check-if-pushed
        run: |
          export GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          export TAG=$BASE_TAG$(cat VERSION)
          echo manifest=test >> $GITHUB_OUTPUT
      - name: Data for release
        if: steps.check-if-pushed.outputs.manifest
        # echo kam193/$(make print):$TAG >> output.txt
        run: |
          echo ${{ matrix.service }} > service.txt
          echo ${{ matrix.service }}-aaa > output.txt
      - name: Upload artifact
        if: steps.check-if-pushed.outputs.manifest
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        with:
          name: ${{ matrix.service }}
          path: |
            ${{ matrix.service }}/output.txt
            ${{ matrix.service }}/service.txt
            ${{ matrix.service }}/VERSION
  release:
    needs: build-containers
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427
        with:
          path: ./artifacts
      - name: Print artifacts
        run: |
          for service in $(ls -1 ./artifacts); do
            output=$(cat ./artifacts/$service/output.txt)
            ls -l .
            echo "## $service $BASE_TAG$(cat `./artifacts/$service/VERSION`)" >> release_text.md
            echo "Following image was uploaded: \`$output\`" >> release_text.md
          done
      - name: Check done
        id: check-if-release
        run: |
          if [[ -z "release_text.md" ]]; then
            echo "release=false" >> $GITHUB_OUTPUT
          else
            echo "This is an automated release. Following new service versions where uploaded" > release_body.md
            cat release_text.md >> release_body.md
            echo "release=true" >> $GITHUB_OUTPUT
            echo "CURRENT_DATE=$(date +'%Y-%m-%d--%H-%M')" >> $GITHUB_ENV
          fi
      - name: Release changes
        if: steps.check-if-release.outputs.release == 'true'
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        with:
          name: Release on ${{ env.CURRENT_DATE }}
          bodyFile: release_body.md
          makeLatest: true
          tag: release-${{ env.CURRENT_DATE }}
          generateReleaseNotes: true
